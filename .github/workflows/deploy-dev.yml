name: Deploy qwer to dev

on:
  push:
    branches: [ trunk, deploy-test, deploy-test-2 ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add musl ubuntu package
      run: sudo apt-get install -y musl musl-dev musl-tools

    - name: Add musl target
      run: rustup target add x86_64-unknown-linux-musl

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install NPM packages
      run: npm install --prefix qw-site/frontend

    - name: Build NPM project
      run: npm run build --prefix qw-site/frontend

    - name: Build qwer
      run: cargo build --release --target x86_64-unknown-linux-musl -p qwer

    - name: Get package version
      run: echo "CRATE_VERSION=$(sed -n -e 's/^version = \"\([0-9].\+\)\"/\1/p' ./qw-site/Cargo.toml)" >> $GITHUB_ENV

    - name: Compress artifacts
      run: tar -vpczf qwer.tar.gz --transform "s,^,qwer-${{ env.CRATE_VERSION }}/," ./build ./qw-site/frontend/dist ./qw-site/docs/output ./target/x86_64-unknown-linux-musl/release/qwer

    - uses: actions/upload-artifact@master
      with:
        name: qwer-build-artifacts
        path: qwer.tar.gz
    outputs:
      package_version: ${{ env.CRATE_VERSION }}

  package:
    needs: build
    name: Package RPM
    runs-on: ubuntu-latest
    env:
      CRATE_VERSION: ${{ needs.build.outputs.package_version }}

    steps:
    - uses: actions/checkout@master

    - uses: actions/download-artifact@master
      with:
        name: qwer-build-artifacts
        path: ./rpmbuild/SOURCES

    - name: Build RPM docker image
      run: docker build -t qwer-build-container -f build/Dockerfile.qwer .

    - name: Run RPM docker environment
      run: docker run --rm -v $(pwd):/app -e CRATE_VERSION="${{ env.CRATE_VERSION }}" qwer-build-container --entrypoint=/bin/bash

#    - name: Setup build environment
#      run: sudo apt-get install -y rpm librpmbuild8 systemd libsystemd-dev

#    - name: Setup RPM environment
#      run: rpmdev-setuptree

#    - name: Build RPM package
#      run: rpmbuild -bb ./build/qwer.spec

    - uses: actions/upload-artifact@master
      with:
        name: qwer-rpm
        path: ./rpmbuild/RPMS

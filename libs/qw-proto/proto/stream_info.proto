syntax = "proto3";
package stream_info;

service StreamInfo {
  rpc Listen (StreamRequest) returns (stream StreamReply);
}

message StreamRequest {
  uint32 statsIntervalSeconds = 1;
}

message StreamMetadata {
  optional string videoEncoder = 1;
  optional uint32 videoBitrateKbps = 2;
  optional bytes parameterSets = 3;
}

message StreamReply {
  message StreamExisting {
    int32 streamSessionId = 1;
    uint32 viewers = 2;
    optional StreamMetadata meta = 3;
  }

  message StreamStarted {
    int32 streamSessionId = 1;
    optional StreamMetadata meta = 2;
  }

  message StreamStopped {
    int32 streamSessionId = 1;
  }

  message ViewerJoin {
    int32 streamSessionId = 1;
  }

  message ViewerLeave {
    int32 streamSessionId = 1;
  }

  message StreamStats {
    int32 streamSessionId = 1;
    uint32 bytesSinceLastStats = 2;
  }

  oneof StreamType {
    StreamExisting streamExisting = 1;
    StreamStarted streamStarted = 2;
    StreamStopped streamStopped = 3;
    ViewerJoin viewerJoin = 4;
    ViewerLeave viewerLeave = 5;
    StreamStats streamStats = 6;
  }
}
